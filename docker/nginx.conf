server {
    server_name localhost;
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;

    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;

    sendfile     off;
	server_name localhost;

    # Gzip stuff
    gzip       on;
    gzip_types text/plain text/xml text/css application/javascript application/x-javascript image/svg+xml;
    gzip_vary  on;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /etc/letsencrypt/live/crossbow.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/crossbow.io/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    #ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    # ssl_dhppem;

    # modern configuration. tweak to your needs.
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';
    ssl_prefer_server_ciphers on;


    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/crossbow.io/chain.pem;

    #charset koi8-r;
    #access_log  /var/log/nginx/log/host.access.log  main;

    root   /usr/share/nginx/html;

    # pagespeed on;
    # pagespeed FileCachePath /var/ngx_pagespeed_cache;
    # pagespeed EnableFilters include_js_source_maps,inline_google_font_css,prioritize_critical_css,collapse_whitespace,remove_comments,insert_dns_prefetch;

    # Ensure requests for pagespeed optimized resources go to the pagespeed handler
    # and no extraneous headers get set.
    location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
      add_header "" "";
    }
    location ~ "^/pagespeed_static/" { }
    location ~ "^/ngx_pagespeed_beacon$" { }

    location / {
        try_files $uri /public-html/$uri /public-html/$uri/index.html /public/$uri =404;
        index  index.html index.htm;
    }

    location ~* ^\/css/core.min.(.+?).css$ {
    	try_files /public/css/core.min.css =404;
		expires 1y;
		add_header Pragma public;
		add_header Cache-Control "public";
    }

    location ~* ^\/js/bundle.min.(.+?).js$ {
        try_files /public/js/bundle.min.js =404;
        expires 1y;
        add_header Pragma public;
        add_header Cache-Control "public";
    }

    location ~* ^.+.(jpg|jpeg|gif|css|png|js|ico|svg|woff)$ {
    	try_files $uri /public-html/$uri /public/$uri =404;
	    expires 1y;
	    add_header Pragma public;
	    add_header Cache-Control "public";
    }

    error_page 404 /404/index.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /404/index.html;
}

server {
	listen 80 default_server;
	listen [::]:80 default_server;
	return 301 https://$host$request_uri;
}
