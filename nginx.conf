server {
    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;
    sendfile     off;
	server_name localhost;

    # Gzip stuff
    gzip       on;
    gzip_types text/plain text/xml text/css application/javascript application/x-javascript image/svg+xml;
    gzip_vary  on;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";

    #charset koi8-r;
    #access_log  /var/log/nginx/log/host.access.log  main;

    root   /usr/share/nginx/html;

    pagespeed off;
    pagespeed FileCachePath /var/ngx_pagespeed_cache;
    pagespeed EnableFilters include_js_source_maps,inline_google_font_css,prioritize_critical_css,collapse_whitespace,remove_comments,insert_dns_prefetch;

    # Ensure requests for pagespeed optimized resources go to the pagespeed handler
    # and no extraneous headers get set.
    location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
      add_header "" "";
    }
    location ~ "^/pagespeed_static/" { }
    location ~ "^/ngx_pagespeed_beacon$" { }

    location / {
        try_files $uri /public-html/$uri /public-html/$uri/index.html /public/$uri =404;
        index  index.html index.htm;
    }

    location ~* ^\/css/core.min.(.+?).css$ {
    	try_files /public/css/core.min.css =404;
		expires 1y;
		add_header Pragma public;
		add_header Cache-Control "public";
    }

    location ~* ^\/js/bundle.min.(.+?).js$ {
        try_files /public/js/bundle.min.js =404;
        expires 1y;
        add_header Pragma public;
        add_header Cache-Control "public";
    }

    location ~* ^.+.(jpg|jpeg|gif|css|png|js|ico|svg|woff)$ {
    	try_files $uri /public-html/$uri /public/$uri =404;
	    expires 1y;
	    add_header Pragma public;
	    add_header Cache-Control "public";
    }

    error_page 404 /404/index.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /404/index.html;
}
